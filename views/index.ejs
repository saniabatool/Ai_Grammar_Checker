<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>AI Grammar Checker</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <style>
      .icon-large { font-size: 3rem; margin-bottom: 1rem; }
      .form-switch .form-check-input { cursor: pointer; }
    </style>
  </head>
  <body class="bg-light text-dark">
    <nav class="navbar navbar-expand-lg bg-body-tertiary px-3">
      <div class="container-fluid">
        <span class="navbar-brand fw-bold"><i class="fas fa-robot text-primary me-2"></i>AI Grammar Checker</span>
        <div class="form-check form-switch ms-auto">
          <input class="form-check-input" type="checkbox" id="darkModeSwitch" />
          <label class="form-check-label" for="darkModeSwitch">Dark Mode</label>
        </div>
      </div>
    </nav>

    <div class="container mt-5">
      <div class="text-center mb-5">
        <h1 class="display-5">Smarter Writing Starts Here</h1>
        <p class="lead">Enhance your writing with AI — now with voice input and speech output.</p>
      </div>

      <div class="row">
        <!-- Input Section -->
        <div class="col-md-6 mb-4">
          <div class="card">
            <div class="card-body">
              <h2 class="card-title"><i class="fas fa-keyboard me-2"></i>Input Your Text</h2>
              <form id="grammarForm" action="/correct" method="POST">
                <div class="mb-3">
                  <textarea class="form-control" id="text" name="text" rows="5" required placeholder="Type or speak..."><%= typeof original !== 'undefined' ? original : '' %></textarea>
                </div>
                <div class="d-flex flex-wrap gap-2">
                  <button type="button" class="btn btn-outline-secondary" onclick="startDictation()">
                    <i class="fas fa-microphone"></i> Speak
                  </button>
                  <button type="submit" class="btn btn-primary">
                    <i class="fas fa-magic me-2"></i>Enhance with AI
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>

        <!-- Output Section -->
        <div class="col-md-6 mb-4">
          <div class="card">
            <div class="card-body">
              <h2 class="card-title"><i class="fas fa-check-circle me-2"></i>Corrected Output</h2>
              <% if (corrected) { %>
                <div class="alert alert-success" id="corrected-text">
                  <%- corrected.replace(/<[^>]*>/g, '') %>
                </div>
                <button class="btn btn-secondary mb-3" onclick="speakText()">
                  <i class="fas fa-volume-up me-1"></i> Listen
                </button>
                <% if (suggestions && suggestions.length > 0) { %>
                  <h5>Suggestions:</h5>
                  <ul class="list-group">
                    <% suggestions.forEach(s => { %>
                      <li class="list-group-item">
                        <strong><%= s.original %></strong> → <em><%= s.suggestion %></em><br />
                        <small class="text-muted"><%= s.message %></small>
                      </li>
                    <% }) %>
                  </ul>
                <% } %>
              <% } else { %>
                <p>Enter something above to see suggestions.</p>
              <% } %>
            </div>
          </div>
        </div>
      </div>

      <!-- Features Section -->
      <div class="row mt-4">
        <div class="col-md-4 text-center mb-3">
          <i class="fas fa-bolt icon-large text-warning"></i>
          <h4>Fast</h4>
          <p>Instant AI grammar corrections.</p>
        </div>
        <div class="col-md-4 text-center mb-3">
          <i class="fas fa-brain icon-large text-info"></i>
          <h4>Smart</h4>
          <p>Understands context and tone.</p>
        </div>
        <div class="col-md-4 text-center mb-3">
          <i class="fas fa-volume-up icon-large text-success"></i>
          <h4>Speech</h4>
          <p>Listen to corrected results and speak input.</p>
        </div>
      </div>
    </div>

    <footer class="bg-body-tertiary text-center text-muted py-4 mt-5 border-top">
      <div class="container">
        <p class="mb-2 mb-md-1 fw-medium">&copy; 2025 <strong>Sania Batool</strong>. All rights reserved.</p>
        <div class="d-flex justify-content-center gap-3">
          <a href="https://github.com/saniabatool" target="_blank" aria-label="GitHub" class="text-muted hover-opacity">
            <i class="fab fa-github fa-lg"></i>
          </a>
          <a href="https://www.linkedin.com/in/sania-batool-406a1a338/" target="_blank" aria-label="LinkedIn" class="text-muted hover-opacity">
            <i class="fab fa-linkedin fa-lg"></i>
          </a>
          <a href="mailto:saniabatoolabro14@gmail.com" aria-label="Email" class="text-muted hover-opacity">
            <i class="fas fa-envelope fa-lg"></i>
          </a>
        </div>
      </div>
    </footer>

    <!-- Scripts -->
    <script>
      function startDictation() {
        if ('webkitSpeechRecognition' in window) {
          const recognition = new webkitSpeechRecognition();
          recognition.lang = 'en-US';
          recognition.continuous = false;
          recognition.interimResults = false;
          recognition.onresult = function (event) {
            document.getElementById('text').value = event.results[0][0].transcript;
          };
          recognition.onerror = function () {
            alert('Speech recognition failed. Try again.');
          };
          recognition.start();
        } else {
          alert('Speech recognition not supported in this browser.');
        }
      }

      function speakText() {
        const text = document.getElementById("corrected-text")?.innerText;
        if (text) {
          const utterance = new SpeechSynthesisUtterance(text);
          utterance.lang = 'en-US';
          speechSynthesis.speak(utterance);
        }
      }

      const darkSwitch = document.getElementById("darkModeSwitch");
      const htmlTag = document.documentElement;
      const body = document.body;

      function applyTheme(mode) {
        htmlTag.setAttribute("data-bs-theme", mode);
        localStorage.setItem("theme", mode);
        if (mode === "dark") {
          body.classList.replace("bg-light", "bg-dark");
          body.classList.replace("text-dark", "text-light");
        } else {
          body.classList.replace("bg-dark", "bg-light");
          body.classList.replace("text-light", "text-dark");
        }
      }

      darkSwitch.addEventListener("change", () => {
        applyTheme(darkSwitch.checked ? "dark" : "light");
      });

      const saved = localStorage.getItem("theme");
      if (saved === "dark") {
        darkSwitch.checked = true;
        applyTheme("dark");
      }
    </script>
  </body>
</html>
